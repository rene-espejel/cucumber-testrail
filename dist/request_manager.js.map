{
  "version": 3,
  "file": "request_manager.js",
  "sourceRoot": "../src",
  "sources": [
    "request_manager.coffee"
  ],
  "names": [],
  "mappings": ";AAAA;AAAA,MAAA,cAAA,EAAA;;EAAA,OAAA,GAAU,OAAA,CAAQ,iBAAR;;EAEJ,iBAAN,MAAA,eAAA;IAEE,WAAa,SAAS,CAAA,CAAT,CAAA;MAAC,IAAC,CAAA;IAAF;;IAEb,IAAM,CAAC,IAAD,EAAO,CAAC,GAAD,EAAM,IAAN,CAAP,CAAA;AACJ,UAAA,IAAA,EAAA;MAAA,IAAA,GAAO,IAAC,CAAA,aAAD,CAAe;QAAA,GAAA,EAAK,GAAL;QAAU,QAAA,EAAU,IAAC,CAAA,IAAI,CAAC,QAA1B;QAAoC,QAAA,EAAU,IAAC,CAAA,IAAI,CAAC,QAApD;QAA8D,IAAA,EAAM;MAApE,CAAf;MACP,GAAA,GAAM,OAAO,CAAC;MACd,IAAsB,IAAA,KAAQ,MAA9B;QAAA,GAAA,GAAM,OAAO,CAAC,KAAd;;aACA,GAAA,CAAI,IAAJ,CACE,CAAC,IADH,CACQ,QAAA,CAAC,IAAD,CAAA;QACJ,OAAO,CAAC,GAAR,CAAY,uBAAA,GAA0B,IAAtC;eACA,IAAI,CAAC,KAAL,CAAW,IAAX;MAFI,CADR,CAIE,CAAC,KAJH,CAIS,QAAA,CAAC,GAAD,CAAA;AACL,YAAA;AAAA;UACE,YAAA,GAAe,IAAI,CAAC,KAAL,CAAW,GAAX;UACf,OAAO,CAAC,GAAR,CAAY,cAAA,GAAiB,YAAY,CAAC,KAA1C;UACA,IAAG,YAAY,CAAC,KAAb,KAAsB,0CAAzB;YACE,OAAO,CAAC,GAAR,CAAY,yBAAA,GAA4B,GAAG,CAAC,MAAJ,CAAW,GAAG,CAAC,WAAJ,CAAgB,GAAhB,CAAA,GAAuB,CAAlC,CAA5B,GAAmE,kCAA/E,EADF;WAAA,MAAA;YAGE,MAAM,IAAI,KAAJ,CAAU,GAAV,EAHR;WAHF;SAAA,aAAA;UAQE,MAAM,IAAI,KAAJ,CAAU,GAAV,EARR;;QASA,MAAM,IAAI,KAAJ,CAAU,GAAV;MAVD,CAJT;IAJI;;IAoBN,aAAe,CAAC,CAAC,GAAD,EAAM,IAAN,EAAY,QAAZ,EAAsB,QAAtB,CAAD,CAAA;aACb;QAAA,GAAA,EAAK,GAAL;QACA,OAAA,EACE;UAAA,cAAA,EAAgB;QAAhB,CAFF;QAGA,IAAA,EAAM,IAAI,CAAC,SAAL,CAAe,IAAf,CAHN;QAIA,IAAA,EAAM,CAAC,QAAD,EAAW,QAAX;MAJN;IADa;;EAxBjB;;EA+BA,MAAM,CAAC,OAAP,GAAiB;AAjCjB",
  "sourcesContent": [
    "request = require 'request-promise'\n\nclass RequestManager\n\n  constructor: (@opts = {}) ->\n\n  send: (type, {url, body}) ->\n    opts = @_generateOpts url: url, username: @opts.username, password: @opts.password, body: body\n    req = request.get\n    req = request.post if type is 'post'\n    req opts\n      .then (resp) ->\n        console.log(\"Successful Response: \" + resp)\n        JSON.parse resp\n      .catch (err) ->\n        try\n          failResponse = JSON.parse err\n          console.log(\"JSON error: \" + failResponse.error)\n          if failResponse.error == \"Field :case_id is not a valid test case.\"\n            console.log(\"The test case with id: \" + url.substr(url.lastIndexOf(\"/\") + 1) + \" is not on the selected Test Run\")\n          else\n            throw new Error err\n        catch\n          throw new Error err\n        throw new Error err\n\n  _generateOpts: ({url, body, username, password}) ->\n    url: url\n    headers:\n      'Content-Type': 'application/json'\n    body: JSON.stringify body\n    auth: {username, password}\n\nmodule.exports = RequestManager\n"
  ]
}