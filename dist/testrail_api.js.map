{
  "version": 3,
  "file": "testrail_api.js",
  "sourceRoot": "../src",
  "sources": [
    "testrail_api.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "Table = require 'cli-table'\nPARAMS = ['project_id', 'suite_id', 'section_id', 'testrun_id', 'testplan_id']\nFILTERS = ['section_id', 'suite_id']\nREQUESTS =\n  addPlanEntry: 'add_plan_entry/{{testplan_id}}'\n  getCases: 'get_cases/{{project_id}}&suite_id={{suite_id}}&section_id={{section_id}}'\n  addResults: 'add_results_for_cases/{{testrun_id}}'\n\nRequestManager = require './request_manager'\n\nclass TestRailApi\n\n  constructor: (@config = {}, @opts = {}, @suite_config = {}, @metrics = []) ->\n    @request_manager = new RequestManager @opts\n\n\n  addResults: (testrun_id) ->\n    url = @_generateUrl 'addResults', {testrun_id}\n    yield @request_manager.send 'post', url: url, body: results: @metrics\n    testrun_url = \"#{@config.testrail_url}/runs/view/#{testrun_id}\"\n    console.log \"Successfully added the following results for project symbol #{@suite_config.project_symbol} to TestRail. Visit #{testrun_url} to access.\"\n\n\n  fetchCaseDescriptions: ->\n    # disables section_id filter to return table for entire suite\n    @suite_config.section_id = undefined\n    resp = yield @request_manager.send 'get', url: @_generateUrl 'getCases'\n    table = new Table head: ['Case ID', 'Section ID', 'Title']\n    resp.forEach ({section_id, title, id}) ->\n      table.push [id, section_id, title]\n    console.log table.toString()\n\n\n  fetchCases: ->\n    resp = yield @request_manager.send 'get', url: @_generateUrl 'getCases'\n    resp.map ({id}) -> id\n\n\n  generateTestRun: (case_ids) ->\n    url = @_generateUrl 'addPlanEntry'\n    body =\n      suite_id: @suite_config.suite_id\n      name: \"Automated Test Run #{@opts.runid} - #{(new Date()).toLocaleDateString()}\"\n      include_all: false\n      case_ids: case_ids\n    resp = yield @request_manager.send 'post', {url, body}\n    resp.runs[resp.runs.length - 1].id\n\n\n  _generateUrl: (type, opts={}) ->\n    action = REQUESTS[type] or ''\n    PARAMS.forEach (key) =>\n      action = action.replace(\"{{#{key}}}\", @suite_config[key]) if @suite_config[key] isnt undefined and opts[key] is undefined\n      action = action.replace(\"&#{key}={{#{key}}}\", '') unless @suite_config[key] isnt undefined and FILTERS.indexOf(key) isnt -1\n      action = action.replace(\"{{#{key}}}\", opts[key]) unless opts[key] is undefined\n    \"#{@config.testrail_url}/api/v2/#{action}\"\n\n\nmodule.exports = TestRailApi\n"
  ]
}