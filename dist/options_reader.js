// Generated by CoffeeScript 2.4.1
(function() {
  var OptionsReader, REQUIRED_SCRIPT_OPTIONS, _, minimist,
    indexOf = [].indexOf;

  _ = require('lodash');

  minimist = require('minimist');

  REQUIRED_SCRIPT_OPTIONS = ['result', 'username', 'password', 'config'];

  OptionsReader = class OptionsReader {
    constructor() {
      this.alias = {
        u: 'username',
        p: 'password',
        c: 'config',
        r: 'result',
        i: 'runid',
        n: 'newrun',
        t: 'runname'
      };
      this.unknown = function(opt) {
        throw new Error(`unrecognized option ${opt} passed in command line`);
      };
    }

    parse() {
      var missingOptions;
      this.opts = minimist(process.argv.slice(2), {
        alias: this.alias,
        unknown: this.unknown
      });
      missingOptions = this._validateOptions();
      if (missingOptions.length) {
        throw new Error(`script is missing these required options: ${missingOptions}`);
      }
      console.log("New Run: " + this.opts.newrun + " Run Name: " + this.opts.runname);
      if (this.opts.newrun === 'true') {
        this.opts.newrun = true;
      }
      if (this.opts.newrun === true && this.opts.runname === void 0) {
        throw new Error("If a new test run is generated a test run name needs to be specified with -t");
      }
      return this.opts;
    }

    _validateOptions() {
      var params, required_options;
      params = Object.keys(this.opts);
      required_options = REQUIRED_SCRIPT_OPTIONS;
      required_options.splice(1, 1);
      return _.compact(required_options.map(function(field) {
        if (indexOf.call(params, field) < 0) {
          return field;
        }
      }));
    }

  };

  module.exports = OptionsReader;

}).call(this);

//# sourceMappingURL=options_reader.js.map
